generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Client {
  id       String            @id @default(uuid())
  name     String
  email    String            @unique
  tel      String
  services ServiceProvided[] @relation("client")

  @@map("clients")
}

model Service {
  id              String            @id @default(uuid()) 
  name            String            @unique
  price           Float
  maxInstallments Int               @map("max_installments")
  clients         ServiceProvided[] @relation("service")

  @@map("services")
}

model InstallmentsServiceProvided {
  serviceProvided ServiceProvided @relation("serviceProvidedId", fields: [serviceProvidedId], references: [id], onDelete: Cascade)
  serviceProvidedId String @map("service_provided_id")
  numberInstallment Int @map("number_installment")
  dateInstallment DateTime @map("date_installment")
  priceInstallment Float @map("price_installment")

  @@id([serviceProvidedId, numberInstallment])
  @@map("installments_service_provided")

}

model ServiceProvided {
  id                     String   @id @default(uuid())
  clientId               String   @map("client_id") @default("removed")
  serviceId              String   @map("service_id") @default("removed")
  installmentsContracted Int      @map("installments_contracted")
  installmentsPaid       Int      @map("installments_paid")
  createdAt              DateTime @default(now()) @map("created_at")
  obs                    String   @default("")
  client                 Client   @relation("client", fields: [clientId], references: [id], onDelete: Cascade)
  service                Service  @relation("service", fields: [serviceId], references: [id], onDelete: Cascade)
  installmentsServiceProvided InstallmentsServiceProvided[] @relation("serviceProvidedId")

  @@map("services_provided")
}

model Admin {
  id       String @id @default(uuid())
  username String @unique
  password String

  @@map("admin")
}

